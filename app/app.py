import streamlit as st
import os
import sys
import logging
import io
import time
import tempfile
import shutil
from datetime import datetime
from pathlib import Path
from typing import Dict, Any, List, Optional, Tuple
import pandas as pd
from openpyxl.utils import get_column_letter
from openpyxl import load_workbook
from PIL import Image as PILImage
import json
import traceback
from fpdf import FPDF

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤–º–µ—Å—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö
from utils import config_manager
from utils import excel_utils
from utils import image_utils
from utils.config_manager import get_downloads_folder, ConfigManager
# <<< –î–û–ë–ê–í–õ–Ø–ï–ú –ì–õ–û–ë–ê–õ–¨–ù–´–ô –ò–ú–ü–û–†–¢ >>>
from core.processor import process_excel_file, create_pdf_cards

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'logs')
os.makedirs(log_dir, exist_ok=True)

# –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤ –¥–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö
log_files = sorted([f for f in os.listdir(log_dir) if f.startswith('app_')])
if len(log_files) > 5:
    for old_log in log_files[:-5]:
        try:
            os.remove(os.path.join(log_dir, old_log))
        except:
            pass

# –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ª–æ–≥-—Ñ–∞–π–ª, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
log_file = os.path.join(log_dir, 'app_latest.log')
# –í—Å–µ–≥–¥–∞ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–æ–≥-—Ñ–∞–π–ª –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
try:
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π
    with open(log_file, 'w', encoding='utf-8') as f:
        f.write(f'{datetime.now().strftime("%Y-%m-%d %H:%M:%S")} - INFO - app - New log file created with UTF-8 encoding\n')
except Exception as e:
    print(f"Error creating log file: {e}")

log_stream = io.StringIO()
log_handler = logging.StreamHandler(log_stream)
log_handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(name)s - %(message)s'))
log_handler.setLevel(logging.INFO)

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–¥–∏–Ω —Ñ–∞–π–ª –ª–æ–≥–∞ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
file_handler = logging.FileHandler(log_file, encoding='utf-8')
file_handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(name)s - %(message)s'))
file_handler.setLevel(logging.DEBUG)

root_logger = logging.getLogger()
root_logger.setLevel(logging.DEBUG)
# –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
for handler in root_logger.handlers[:]:
    root_logger.removeHandler(handler)
root_logger.addHandler(log_handler)
root_logger.addHandler(file_handler)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
import sys
sys.stdout.reconfigure(encoding='utf-8')
sys.stderr.reconfigure(encoding='utf-8')

log = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
def get_downloads_folder():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–µ—Ç–µ–≤–æ–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
    return r"\\10.10.100.2\Foto"

def get_package_folder():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–µ—Ç–µ–≤–æ–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫
    return r"\\10.10.100.2\FotoPack"

default_settings = {
    "paths": {
        "product_images_folder_path_1": get_downloads_folder(),  # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ (Foto)
        "product_images_folder_path_2": r"\\10.10.100.2\pictures",
        "product_images_folder_path_3": "",
        "package_images_folder_path_1": get_package_folder(),    # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫ (FotoPack)
        "package_images_folder_path_2": "",
        "package_images_folder_path_3": ""
    },
    "excel_settings": {
        "article_column": "A"
    }
}

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
def init_config_manager():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    if 'config_manager' not in st.session_state:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –ø—Ä–µ—Å–µ—Ç–∞–º–∏
        presets_folder = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'settings_presets')
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º config manager —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø–∞–ø–∫–∏ –ø—Ä–µ—Å–µ—Ç–æ–≤
        config_manager_instance = config_manager.ConfigManager(presets_folder)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
        for i in range(1, 4):
            prod_key = f'paths.product_images_folder_path_{i}'
            pack_key = f'paths.package_images_folder_path_{i}'
            if config_manager_instance.get_setting(prod_key) is None or config_manager_instance.get_setting(prod_key) == "":
                config_manager_instance.set_setting(prod_key, default_settings['paths'][f'product_images_folder_path_{i}'])
            if config_manager_instance.get_setting(pack_key) is None or config_manager_instance.get_setting(pack_key) == "":
                config_manager_instance.set_setting(pack_key, default_settings['paths'][f'package_images_folder_path_{i}'])
        
        if not config_manager_instance.get_setting('excel_settings.article_column'):
            config_manager_instance.set_setting('excel_settings.article_column', default_settings['excel_settings']['article_column'])
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        config_manager_instance.save_settings("Default")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –≤ session_state
        st.session_state.config_manager = config_manager_instance
        
        log.info("–ú–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    
    return st.session_state.config_manager

def get_downloads_folder():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–µ—Ç–µ–≤–æ–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
    return r"\\10.10.100.2\Foto"

def get_package_folder():
    """–ü–æ–ª—É—á–∏—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–µ—Ç–µ–≤–æ–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫
    return r"\\10.10.100.2\FotoPack"
    
    # –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–æ–¥ –Ω–∏–∂–µ - –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–∞–ø–∫–∏ –∑–∞–≥—Ä—É–∑–æ–∫
    # if platform.system() == "Windows":
    #     import winreg
    #     sub_key = r'SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders'
    #     downloads_guid = '{374DE290-123F-4565-9164-39C4925E467B}'
    #     with winreg.OpenKey(winreg.HKEY_CURRENT_USER, sub_key) as key:
    #         downloads_folder = winreg.QueryValueEx(key, downloads_guid)[0]
    #         return downloads_folder
    # elif platform.system() == "Darwin":  # macOS
    #     return os.path.join(os.path.expanduser('~'), 'Downloads')
    # else:  # Linux –∏ –¥—Ä—É–≥–∏–µ —Å–∏—Å—Ç–µ–º—ã
    #     return os.path.join(os.path.expanduser('~'), 'Downloads')

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–∞—à–µ–π —Ñ—É–Ω–∫—Ü–∏–∏
config_folder = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'settings_presets')
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π config_manager –≤ –º–æ–¥—É–ª–µ config_manager –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π –Ω–∞—à–µ–≥–æ
config_manager.init_config_manager(config_folder)
init_config_manager()

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cm = st.session_state.config_manager
cm.load_settings()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.set_page_config(
    page_title="Excel to PDF Card Generator",
    page_icon="üìë",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
def ensure_temp_dir(prefix: str = "") -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
    
    Args:
        prefix (str): –ü—Ä–µ—Ñ–∏–∫—Å –¥–ª—è –∏–º–µ–Ω–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    
    Returns:
        –ü—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    """
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è –ª—É—á—à–µ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    project_dir = os.path.dirname(os.path.dirname(__file__))
    temp_dir = os.path.join(project_dir, "temp")
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try:
        os.makedirs(temp_dir, exist_ok=True)
        log.info(f"–°–æ–∑–¥–∞–Ω–∞/–ø—Ä–æ–≤–µ—Ä–µ–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {temp_dir}: {e}")
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        temp_dir = os.path.join(tempfile.gettempdir(), f"{prefix}excelwithimages")
        try:
            os.makedirs(temp_dir, exist_ok=True)
            log.info(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–∞—è –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
        except Exception as e:
            log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏—Å—Ç–µ–º–Ω–æ–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {temp_dir}: {e}")
            # –ï—Å–ª–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω–∞—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
            raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é") from e
    
    return temp_dir

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
def cleanup_temp_files():
    """
    –û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, —Å–æ—Ö—Ä–∞–Ω—è—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏.
    """
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        temp_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'temp')
        if not os.path.exists(temp_dir):
            os.makedirs(temp_dir, exist_ok=True)
            log.info(f"–°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {temp_dir}")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ (–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ)
        session_start_time = datetime.now()
        
        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º—ã —Ö–æ—Ç–∏–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å (–≤ –º–∏–Ω—É—Ç–∞—Ö)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —á–∞—Å–∞
        max_age_minutes = 60
        
        # –§–∞–π–ª—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏)
        files_to_keep = [
            st.session_state.get('temp_file_path', ''),
            st.session_state.get('output_file_path', '')
        ]
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        all_files = os.listdir(temp_dir)
        log.info(f"–ù–∞–π–¥–µ–Ω–æ {len(all_files)} —Ñ–∞–π–ª–æ–≤ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {temp_dir}")
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        removed_count = 0
        for filename in all_files:
            file_path = os.path.join(temp_dir, filename)
            
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ñ–∞–π–ª
            if not os.path.isfile(file_path):
                continue
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ —Ñ–∞–π–ª –≤ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
            if file_path in files_to_keep:
                log.info(f"–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏: {file_path}")
                continue
                
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ñ–∞–π–ª–∞
            try:
                file_mod_time = datetime.fromtimestamp(os.path.getmtime(file_path))
                file_age = session_start_time - file_mod_time
                
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —Å—Ç–∞—Ä—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –∏–ª–∏ –Ω–µ –∏–∑ —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
                if file_age.total_seconds() > (max_age_minutes * 60):
                    try:
                        os.remove(file_path)
                        removed_count += 1
                        log.info(f"–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {file_path} (–≤–æ–∑—Ä–∞—Å—Ç: {file_age})")
                    except Exception as e:
                        log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
            except Exception as e:
                log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –≤—Ä–µ–º–µ–Ω–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
                    
        log.info(f"–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£–¥–∞–ª–µ–Ω–æ {removed_count} —Ñ–∞–π–ª–æ–≤.")
    except Exception as e:
        log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {e}")

# –í—ã–∑—ã–≤–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
cleanup_temp_files()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –ª–æ–≥ —Å–µ—Å—Å–∏–∏
def add_log_message(message, level="INFO"):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ª–æ–≥ —Å–µ—Å—Å–∏–∏ —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π.
    
    Args:
        message (str): –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
        level (str): –£—Ä–æ–≤–µ–Ω—å —Å–æ–æ–±—â–µ–Ω–∏—è (INFO, WARNING, ERROR, SUCCESS)
    """
    if 'log_messages' not in st.session_state:
        st.session_state.log_messages = []
    
    timestamp = datetime.now().strftime("%H:%M:%S")
    st.session_state.log_messages.append(f"[{timestamp}] [{level}] {message}")
    
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞
    if len(st.session_state.log_messages) > 100:
        st.session_state.log_messages = st.session_state.log_messages[-100:]
    
    # –¢–∞–∫–∂–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—ã—á–Ω—ã–π –ª–æ–≥
    if level == "ERROR":
        log.error(message)
    elif level == "WARNING":
        log.warning(message)
    else:
        log.info(message)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
def show_settings():
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –±–ª–æ–∫ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –≤ —Å–∞–π–¥–±–∞—Ä–µ"""
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        cm = st.session_state.config_manager

        with st.expander("–ü–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤", expanded=True):
            st.markdown("–£–∫–∞–∂–∏—Ç–µ –¥–æ 3-—Ö –ø–∞–ø–æ–∫. –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç –∏–¥—Ç–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É.")
            for i in range(1, 4):
                key = f'paths.product_images_folder_path_{i}'
                current_path = cm.get_setting(key, "")
                new_path = st.text_input(f"–ü–∞–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ {i}", value=current_path, key=f"product_folder_{i}")
                if new_path != current_path:
                    cm.set_setting(key, new_path)
                    cm.save_settings("Default")
                    st.rerun()
                    
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—É—Ç–∏
                if new_path:
                    if not os.path.exists(new_path):
                        st.warning(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ {i} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å: {new_path}")
                    elif new_path.startswith(r"\\"):
                        st.warning(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ {i} —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–µ—Ç–µ–≤–æ–π –¥–∏—Å–∫. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.")

        with st.expander("–ü–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫", expanded=True):
            st.markdown("–£–∫–∞–∂–∏—Ç–µ –¥–æ 3-—Ö –ø–∞–ø–æ–∫ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫.")
            for i in range(1, 4):
                key = f'paths.package_images_folder_path_{i}'
                current_path = cm.get_setting(key, "")
                new_path = st.text_input(f"–ü–∞–ø–∫–∞ —É–ø–∞–∫–æ–≤–æ–∫ {i}", value=current_path, key=f"package_folder_{i}")
                if new_path != current_path:
                    cm.set_setting(key, new_path)
                    cm.save_settings("Default")
                    st.rerun()
                    
                # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø—É—Ç–∏
                if new_path:
                    if not os.path.exists(new_path):
                        st.warning(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —É–ø–∞–∫–æ–≤–æ–∫ {i} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å: {new_path}")
                    elif new_path.startswith(r"\\"):
                        st.warning(f"‚ö†Ô∏è –ü–∞–ø–∫–∞ —É–ø–∞–∫–æ–≤–æ–∫ {i} —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —Å–µ—Ç–µ–≤–æ–π –¥–∏—Å–∫. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏.")

        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
        max_size_mb = st.number_input(
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–ú–ë)",
            min_value=1,
            max_value=1000,
            value=100,
            step=10,
            help="–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ PDF –≤ –º–µ–≥–∞–±–∞–π—Ç–∞—Ö"
        )
        st.session_state.max_file_size_mb = max_size_mb
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –ø—É—Ç–µ–π
        if st.button("–°–±—Ä–æ—Å–∏—Ç—å –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º", key="reset_paths_button"):
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            product_folder = get_downloads_folder()  # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
            package_folder = get_package_folder()    # –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Ç–æ–≤–∞—Ä–æ–≤
            cm.set_setting('paths.product_images_folder_path_1', product_folder)
            cm.set_setting('paths.product_images_folder_path_2', r"\\10.10.100.2\pictures")
            cm.set_setting('paths.product_images_folder_path_3', "")
            
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É–ø–∞–∫–æ–≤–æ–∫
            cm.set_setting('paths.package_images_folder_path_1', package_folder)
            cm.set_setting('paths.package_images_folder_path_2', "")
            cm.set_setting('paths.package_images_folder_path_3', "")
            
            cm.save_settings("Default")
            st.success("–ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º —Å–±—Ä–æ—à–µ–Ω—ã –¥–æ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
            st.rerun()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ Excel —Ñ–∞–π–ª–∞
def load_excel_file(uploaded_file_arg=None):
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª –∏–∑ session_state, –µ—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω (–¥–ª—è on_change)
    uploaded_file = uploaded_file_arg if uploaded_file_arg else st.session_state.get('file_uploader')
    if not uploaded_file:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω –∏–∑ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞
        log.warning("–§–∞–π–ª –±—ã–ª —É–¥–∞–ª–µ–Ω –∏–∑ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞.")
        st.session_state.available_sheets = []
        st.session_state.selected_sheet = None
        st.session_state.df = None
        st.session_state.temp_file_path = None
        st.session_state.processing_error = None
        return

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å –∏–∑ session_state
    temp_file_path = st.session_state.get('temp_file_path')
    if not temp_file_path or not os.path.exists(temp_file_path):
        log.error("–í—Ä–µ–º–µ–Ω–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        st.session_state.processing_error = "–û—à–∏–±–∫–∞: –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∑–∞–Ω–æ–≤–æ."
        st.session_state.available_sheets = []
        st.session_state.selected_sheet = None
        st.session_state.df = None
        return
        
    try:
        log.info(f"–ó–∞–≥—Ä—É–∑–∫–∞ –ª–∏—Å—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞: {temp_file_path}")
        excel_file = pd.ExcelFile(temp_file_path, engine='openpyxl')
        all_sheets = excel_file.sheet_names
        
        # –§–∏–ª—å—Ç—Ä—É–µ–º –ª–∏—Å—Ç—ã, –∏—Å–∫–ª—é—á–∞—è –ª–∏—Å—Ç—ã —Å –º–∞–∫—Ä–æ—Å–∞–º–∏
        filtered_sheets = [sheet for sheet in all_sheets if not sheet.startswith('xl/macrosheets/')]
        st.session_state.available_sheets = filtered_sheets
        log.info(f"–í—Å–µ –ª–∏—Å—Ç—ã: {all_sheets}")
        log.info(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–∏—Å—Ç—ã (–±–µ–∑ –º–∞–∫—Ä–æ—Å–æ–≤): {st.session_state.available_sheets}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ª–∏—Å—Ç—ã —Å –º–∞–∫—Ä–æ—Å–∞–º–∏
        if len(all_sheets) > len(filtered_sheets):
            log.warning(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –ª–∏—Å—Ç—ã —Å –º–∞–∫—Ä–æ—Å–∞–º–∏: {set(all_sheets) - set(filtered_sheets)}")
            # –ï—Å–ª–∏ –≤—Å–µ –ª–∏—Å—Ç—ã –±—ã–ª–∏ —Å –º–∞–∫—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã
            if not filtered_sheets:
                st.session_state.processing_error = "–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ—Ç —Ñ–∞–π–ª Excel —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –º–∞–∫—Ä–æ—Å—ã, –∞ –Ω–µ –æ–±—ã—á–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel —Å –æ–±—ã—á–Ω—ã–º–∏ –ª–∏—Å—Ç–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ —Ç–∞–±–ª–∏—Ü—ã —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –∏ –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏."
                return
        
        # --- –í—ã–±–æ—Ä –ª–∏—Å—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é --- 
        current_selection = st.session_state.get('selected_sheet')
        default_sheet = None
        if st.session_state.available_sheets:
            # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–µ—Ä–≤—ã–π "–æ–±—ã—á–Ω—ã–π" –ª–∏—Å—Ç (–Ω–µ –ø—É—Å—Ç–æ–π, –Ω–µ —Å–∫—Ä—ã—Ç—ã–π - openpyxl –º–æ–∂–µ—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è –¥–ª—è —Å–∫—Ä—ã—Ç—ã—Ö)
            # –ü—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç: –ø—Ä–æ—Å—Ç–æ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π
            default_sheet = st.session_state.available_sheets[0]
            log.info(f"–õ–∏—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤—ã–±—Ä–∞–Ω: {default_sheet}")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ª–∏—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω –µ—â–µ –Ω–µ –≤—ã–±—Ä–∞–Ω –∏–ª–∏ —Ç–µ–∫—É—â–∏–π –≤—ã–±–æ—Ä –Ω–µ–≤–∞–ª–∏–¥–µ–Ω
        if default_sheet and (not current_selection or current_selection not in st.session_state.available_sheets):
             st.session_state.selected_sheet = default_sheet
             # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º sheet_selector –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã handle_sheet_change
             st.session_state.sheet_selector = default_sheet
             log.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç: {st.session_state.selected_sheet}")
             # –°–±—Ä–∞—Å—ã–≤–∞–µ–º DataFrame, —Ç.–∫. –ª–∏—Å—Ç –∏–∑–º–µ–Ω–∏–ª—Å—è (–∏–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤–ø–µ—Ä–≤—ã–µ)
             st.session_state.df = None 
             st.session_state.processing_error = None

        # --- –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) ---
        # –í—ã–∑—ã–≤–∞–µ–º handle_sheet_change, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –í–´–ë–†–ê–ù–ù–û–ì–û –ª–∏—Å—Ç–∞
        # (—ç—Ç–æ —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ –ª–∏—Å—Ç –±—ã–ª —Ç–æ–ª—å–∫–æ —á—Ç–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        if st.session_state.selected_sheet:
            handle_sheet_change()  # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∏—Ç df –∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç –æ—à–∏–±–∫–∏
        else:
             # –ï—Å–ª–∏ –ª–∏—Å—Ç–æ–≤ –Ω–µ—Ç –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ —É–¥–∞–ª–æ—Å—å
             st.session_state.df = None
             st.session_state.processing_error = "–í —Ñ–∞–π–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ª–∏—Å—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏."
             log.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –ª–∏—Å—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–ª–∏ –ª–∏—Å—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")

    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –ª–∏—Å—Ç–æ–≤ –∏–∑ Excel-—Ñ–∞–π–ª–∞: {e}"
        log.error(error_msg, exc_info=True)
        st.session_state.processing_error = error_msg
        st.session_state.available_sheets = []
        st.session_state.selected_sheet = None
        st.session_state.df = None

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
def all_inputs_valid():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∏ –≤–∞–ª–∏–¥–Ω—ã.
    
    Returns:
        bool: True, –µ—Å–ª–∏ –≤—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤–∞–ª–∏–¥–Ω—ã, –∏–Ω–∞—á–µ False
    """
    # –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    valid = True
    log_msgs = []
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ DataFrame
    if st.session_state.get('df') is None:
        log_msgs.append("DataFrame –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
        valid = False
    else:
        log_msgs.append(f"DataFrame –∑–∞–≥—Ä—É–∂–µ–Ω, —Ä–∞–∑–º–µ—Ä: {st.session_state.df.shape}")
        
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ –ª–∏—Å—Ç –≤ Excel
    if st.session_state.get('selected_sheet') is None:
        log_msgs.append("–õ–∏—Å—Ç Excel –Ω–µ –≤—ã–±—Ä–∞–Ω")
        valid = False
    else:
        log_msgs.append(f"–í—ã–±—Ä–∞–Ω –ª–∏—Å—Ç: {st.session_state.selected_sheet}")

    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –∫–æ–ª–æ–Ω–∫–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏
    if not st.session_state.get('article_column'): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∏ –Ω–µ–ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        log_msgs.append("–ö–æ–ª–æ–Ω–∫–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω–∞")
        valid = False
    else:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ - –±—É–∫–≤–∞ –∏–ª–∏ —á–∏—Å–ª–æ
        article_col = st.session_state.article_column
        if not (article_col.isalpha() or article_col.isdigit()):
            log_msgs.append(f"–ù–µ–≤–µ—Ä–Ω–æ–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–∫–∏ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏: '{article_col}'. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±—É–∫–≤—É (A, B, C...) –∏–ª–∏ –Ω–æ–º–µ—Ä (1, 2, 3...)")
            valid = False
        else:
            log_msgs.append(f"–í—ã–±—Ä–∞–Ω–∞ –∫–æ–ª–æ–Ω–∫–∞ –∞—Ä—Ç–∏–∫—É–ª–æ–≤: {article_col} ({article_col if article_col.isdigit() else f'—Å—Ç–æ–ª–±–µ—Ü {article_col}'})")

    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    images_folder = config_manager.get_setting("paths.product_images_folder_path_1", "")
    if not images_folder:
        log_msgs.append("–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö")
        valid = False
    elif not os.path.exists(images_folder):
        log_msgs.append(f"–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {images_folder}")
        valid = False
    else:
        log_msgs.append(f"–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–∞–π–¥–µ–Ω–∞: {images_folder}")

    # –õ–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏
    final_msg = "–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç: " + ("–£—Å–ø–µ—à–Ω–æ" if valid else "–ù–µ—É—Å–ø–µ—à–Ω–æ")
    log.info(final_msg)
    for msg in log_msgs:
        log.info(f"- {msg}")
        
    return valid

def trigger_processing():
    """Sets a flag to start processing."""
    st.session_state.start_processing = True

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
def handle_sheet_change():
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞ Excel –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ.
    """
    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ª–∏—Å—Ç –∏–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
    if 'sheet_selector' in st.session_state and st.session_state.get("sheet_selector") != st.session_state.selected_sheet:
        st.session_state.selected_sheet = st.session_state.get("sheet_selector")
        log.info(f"–í—ã–±—Ä–∞–Ω –Ω–æ–≤—ã–π –ª–∏—Å—Ç –∏–∑ —Å–µ–ª–µ–∫—Ç–æ—Ä–∞: {st.session_state.selected_sheet}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ª–∏—Å—Ç
    selected_sheet = st.session_state.get('selected_sheet')
    if not selected_sheet:
        log.warning("–ù–µ –≤—ã–±—Ä–∞–Ω –ª–∏—Å—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö")
        st.session_state.df = None
        st.session_state.processing_error = "–ù–µ –≤—ã–±—Ä–∞–Ω –ª–∏—Å—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö"
        return
        
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
    if st.session_state.temp_file_path and os.path.exists(st.session_state.temp_file_path):
        try:
            log.info(f"–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å –ª–∏—Å—Ç–∞: {selected_sheet}")
            
            # –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: –±–µ–∑ –ø—Ä–æ–ø—É—Å–∫–∞ —Å—Ç—Ä–æ–∫ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ
            df = pd.read_excel(
                st.session_state.temp_file_path, 
                sheet_name=selected_sheet, 
                engine='openpyxl',
                skiprows=0,
                header=None
            )
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ —Å—Ç–æ–ª–±—Ü—ã —Å –æ–±—ä–µ–∫—Ç–∞–º–∏ –≤ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –æ—à–∏–±–æ–∫ —Å pyarrow
            for col in df.select_dtypes(include=['object']).columns:
                df[col] = df[col].astype(str)
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç–æ–π DataFrame
            log.info(f"–†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ —Å–º–µ–Ω–µ –ª–∏—Å—Ç–∞: —Å—Ç—Ä–æ–∫={df.shape[0]}, –∫–æ–ª–æ–Ω–æ–∫={df.shape[1]}; –ø—É—Å—Ç–æ–π={df.empty}")
            
            if df.empty:
                error_msg = f"–õ–∏—Å—Ç '{selected_sheet}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö"
                log.warning(error_msg)
                st.session_state.processing_error = error_msg
                st.session_state.df = None
                return
            
            if df.shape[0] == 0:
                error_msg = f"–õ–∏—Å—Ç '{selected_sheet}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç—Ä–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏"
                log.warning(error_msg)
                st.session_state.processing_error = error_msg
                st.session_state.df = None
                return
                
            if df.shape[1] == 0:
                error_msg = f"–õ–∏—Å—Ç '{selected_sheet}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–ª–æ–Ω–æ–∫ —Å –¥–∞–Ω–Ω—ã–º–∏"
                log.warning(error_msg)
                st.session_state.processing_error = error_msg
                st.session_state.df = None
                return
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –∫–æ–ª–æ–Ω–∫–∏, –Ω–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –Ω–∏—Ö NaN
            if df.notna().sum().sum() == 0:
                error_msg = f"–õ–∏—Å—Ç '{selected_sheet}' —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏"
                log.warning(error_msg)
                st.session_state.processing_error = error_msg
                st.session_state.df = None
                return
            
            # –í—Å–µ —Ö–æ—Ä–æ—à–æ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º DataFrame
            st.session_state.df = df
            st.session_state.processing_error = None
            log.info(f"–õ–∏—Å—Ç '{selected_sheet}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω. –ù–∞–π–¥–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ –∏ {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫")
            
        except Exception as e:
            error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–∏—Å—Ç–∞ '{selected_sheet}': {str(e)}"
            log.error(error_msg)
            
            # –î–µ–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –±–æ–ª–µ–µ –ø–æ–Ω—è—Ç–Ω—ã–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_friendly_msg = error_msg
            if "'dict' object has no attribute 'shape'" in str(e):
                user_friendly_msg = f"–õ–∏—Å—Ç '{selected_sheet}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–∞–±–ª–∏—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç —Å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."
            elif "No sheet" in str(e) or "not found" in str(e):
                user_friendly_msg = f"–õ–∏—Å—Ç '{selected_sheet}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–∏—Å—Ç."
            elif "Empty" in str(e) or "no data" in str(e):
                user_friendly_msg = f"–õ–∏—Å—Ç '{selected_sheet}' –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏."
            elif "ArrowTypeError" in str(e) or "Expected bytes" in str(e):
                user_friendly_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ª–∏—Å—Ç –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª."
                
            st.session_state.processing_error = user_friendly_msg
            st.session_state.df = None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ Excel
def file_uploader_section():
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–µ–∫—Ü–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ Excel.
    """
    with st.container():
        st.write("## –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ Excel")
        
        # CSS —Å—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
        st.markdown("""
        <style>
        /* –°—Ç–∏–ª–∏ –¥–ª—è –±–æ–ª—å—à–æ–π –∑–µ–ª–µ–Ω–æ–π –∫–Ω–æ–ø–∫–∏ */
        .big-button-container {
            display: flex;
            justify-content: center;
            margin: 20px 0;
        }
        
        /* –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –∫–Ω–æ–ø–æ–∫ */
        .stButton > button:not([kind="secondary"]) {
            height: 80px !important;
            font-size: 20px !important;
            padding: 20px !important;
            width: 100% !important;
        }
        
        /* –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è */
        div[data-testid="stDownloadButton"] button {
            height: 100px !important;
            font-size: 24px !important;
            padding: 25px !important;
            width: 100% !important;
            background-color: #4CAF50 !important;
            color: white !important;
            border: none !important;
            border-radius: 8px !important;
            transition: all 0.3s ease !important;
        }
        
        div[data-testid="stDownloadButton"] button:hover {
            background-color: #45a049 !important;
            transform: scale(1.02) !important;
        }
        
        /* –°—Ç–∏–ª—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö */
        .error-message {
            color: #cc0000;
            background-color: #ffeeee;
            padding: 10px;
            border-radius: 5px;
            border-left: 5px solid #cc0000;
            margin: 10px 0;
        }
        
        /* –°—Ç–∏–ª—å –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ */
        .row-count {
            font-weight: bold;
            color: #1f77b4;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∑–∞–≥—Ä—É–∑—á–∏–∫–∞ —Ñ–∞–π–ª–æ–≤ */
        div[data-testid="stFileUploader"] {
            border: 1px dashed #cccccc;
            padding: 10px;
            border-radius: 5px;
            background-color: #f8f9fa;
        }
        
        div[data-testid="stFileUploader"]:hover {
            border-color: #4CAF50;
            background-color: #f0f9f0;
        }
        
        /* –°—Ç–∏–ª–∏ –¥–ª—è –ª–æ–≥–∞ */
        .log-container {
            max-height: 300px;
            overflow-y: auto;
            font-family: monospace;
            background-color: #f5f5f5;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
            margin-top: 15px;
        }
        
        .log-entry {
            margin: 2px 0;
            font-size: 12px;
        }
        
        .log-info {
            color: #0366d6;
        }
        
        .log-warning {
            color: #e36209;
        }
        
        .log-error {
            color: #d73a49;
        }
        
        .log-success {
            color: #22863a;
        }
        </style>
        """, unsafe_allow_html=True)
        
        # –°—Ç–∏–ª–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫
        big_green_button_style = """
            background-color: #4CAF50;
            color: white;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: pointer;
            border-radius: 8px;
            border: none;
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
        """
        
        inactive_button_style = """
            background-color: #cccccc;
            color: #666666;
            padding: 15px 32px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            cursor: not-allowed;
            border-radius: 8px;
            border: none;
            box-shadow: none;
        """
        
        # –ó–∞–≥—Ä—É–∑—á–∏–∫ —Ñ–∞–π–ª–æ–≤ Excel
        uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ Excel —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏", type=["xlsx", "xls"], key="file_uploader",
                                     on_change=load_excel_file)

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–º —Ñ–∞–π–ª–µ
        if uploaded_file is not None:
            st.write(f"**–ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª:** {uploaded_file.name}")
            
            current_temp_path = st.session_state.get('temp_file_path', '')
            current_file_size = uploaded_file.size
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞
            need_update = False
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
            if not current_temp_path or not os.path.exists(current_temp_path):
                # –§–∞–π–ª–∞ –µ—â–µ –Ω–µ—Ç, –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å
                need_update = True
                log.info(f"–§–∞–π–ª –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π: {uploaded_file.name}")
            elif os.path.basename(current_temp_path) != uploaded_file.name:
                # –ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å, –Ω—É–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–æ–≤—ã–π
                need_update = True
                log.info(f"–ò–º—è —Ñ–∞–π–ª–∞ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å: {os.path.basename(current_temp_path)} -> {uploaded_file.name}")
            else:
                # –§–∞–π–ª —Å —Ç–∞–∫–∏–º –∂–µ –∏–º–µ–Ω–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä
                try:
                    previous_size = os.path.getsize(current_temp_path)
                    if previous_size != current_file_size:
                        # –†–∞–∑–º–µ—Ä –∏–∑–º–µ–Ω–∏–ª—Å—è, –∑–∞–º–µ–Ω—è–µ–º —Ñ–∞–π–ª
                        need_update = True
                        log.info(f"–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –∏–∑–º–µ–Ω–∏–ª—Å—è: {previous_size} -> {current_file_size}")
                        try:
                            os.remove(current_temp_path)
                            log.info(f"–£–¥–∞–ª–µ–Ω –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ñ–∞–π–ª: {current_temp_path}")
                        except Exception as e:
                            log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ñ–∞–π–ª–∞: {e}")
                except Exception as e:
                    log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞ {current_temp_path}: {e}")
                    need_update = True
            
            # –ï—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
            if need_update:
                temp_dir = ensure_temp_dir()
                
                # –û—á–∏—â–∞–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º temp_full_
                try:
                    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º temp_full_
                    output_folder = os.path.dirname(temp_dir)
                    for filename in os.listdir(output_folder):
                        if filename.startswith("temp_full_"):
                            filepath = os.path.join(output_folder, filename)
                            try:
                                if os.path.isfile(filepath):
                                    os.remove(filepath)
                                    log.info(f"–£–¥–∞–ª–µ–Ω –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π —Ñ–∞–π–ª: {filepath}")
                            except Exception as e:
                                log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ {filepath}: {e}")
                except Exception as e:
                    log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {e}")
                    
                temp_file_path = os.path.join(temp_dir, uploaded_file.name)
                with open(temp_file_path, "wb") as f:
                    f.write(uploaded_file.getbuffer())
                st.session_state.temp_file_path = temp_file_path
                add_log_message(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {os.path.basename(temp_file_path)}", "INFO")
                load_excel_file()
            
            # –£–¥–∞–ª–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –∏ —Å—Ç—Ä–æ–∫–∏ —Å –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            st.session_state.skiprows = 0
            st.session_state.header_row = 0
                    
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏, –µ—Å–ª–∏ –µ—Å—Ç—å
            if st.session_state.processing_error:
                st.markdown(f"""
                <div class="error-message">
                    <strong>–û—à–∏–±–∫–∞:</strong> {st.session_state.processing_error}
                </div>
                """, unsafe_allow_html=True)
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                if "–Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã—Ö" in st.session_state.processing_error or "—Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –ø—É—Å—Ç—ã–µ —è—á–µ–π–∫–∏" in st.session_state.processing_error:
                    st.info("""
                    **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã:**
                    
                    1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª Excel —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –ª–∏—Å—Ç–µ
                    2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–≤–∏–¥–∏–º—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–π –∏–ª–∏ —Å–∫—Ä—ã—Ç—ã—Ö —Å—Ç—Ä–æ–∫
                    3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –≤ Excel –∏ –ø–µ—Ä–µ—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –µ–≥–æ
                    4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –∫–æ–ª–æ–Ω–∫–∏
                    """)
                
            # –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∏ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∫–æ–ª–æ–Ω–æ–∫
            if st.session_state.df is not None:
                # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö
                col1, col2 = st.columns(2)
                with col1:
                    st.markdown(f"""
                    <div class="row-count">
                        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {st.session_state.df.shape[0]}
                    </div>
                    """, unsafe_allow_html=True)
                with col2:
                    st.write(f"**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫:** {st.session_state.df.shape[1]}")
                
                # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö
                with st.expander("–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö", expanded=False):
                    st.dataframe(st.session_state.df.head(10), use_container_width=True)
                    
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º
                    col_stats = pd.DataFrame({
                        '–ö–æ–ª–æ–Ω–∫–∞': st.session_state.df.columns,
                        '–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö': [str(dtype) for dtype in st.session_state.df.dtypes.values],
                        '–ù–µ–ø—É—Å—Ç—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π': st.session_state.df.count().values,
                        '–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è': (st.session_state.df.count() / len(st.session_state.df) * 100).round(2).values
                    })
                    st.write("### –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º")
                    st.dataframe(col_stats, use_container_width=True)
                
                # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–æ–ª–æ–Ω–æ–∫
                column_options = list(st.session_state.df.columns)
                
                # –ï—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∏ –µ—Å—Ç—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
                if column_options:
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–µ—Å–ª–∏ –∫–æ–ª–æ–Ω–∫–∏ A/B —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
                    default_article_index = column_options.index("A") if "A" in column_options else 0
                    
                    # –ü–æ–∑–≤–æ–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–≤–µ—Å—Ç–∏ –±—É–∫–≤–µ–Ω–Ω—ã–µ –∏–ª–∏ —á–∏—Å–ª–æ–≤—ã–µ –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫
                    selected_article_col = st.text_input(
                        "–ö–æ–ª–æ–Ω–∫–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏", 
                        value=st.session_state.get('article_column', 'A'),
                        key="article_column_input",
                        help="–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É (A, B, C...) –∏–ª–∏ –Ω–æ–º–µ—Ä (1, 2, 3...) –∫–æ–ª–æ–Ω–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â–µ–π –∞—Ä—Ç–∏–∫—É–ª—ã —Ç–æ–≤–∞—Ä–æ–≤"
                    )
                    st.caption("–ü—Ä–∏–º–µ—Ä—ã: 'A' –∏–ª–∏ '1', 'B' –∏–ª–∏ '2'")
                    st.session_state.article_column = selected_article_col
                    
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–æ–ª–µ–π –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
                    process_button_disabled = not all_inputs_valid()
                    
                    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                    st.button("–û–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ–∞–π–ª", 
                              disabled=process_button_disabled, 
                              type="primary", 
                              key="process_button",
                              on_click=trigger_processing,
                              use_container_width=True)  # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è —Ä–∞—Å—Ç—è–≥–∏–≤–∞–Ω–∏—è –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É
                    
                    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥
                    if st.session_state.get('start_processing', False):
                        st.info("–ò–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞. –ù–µ –∑–∞–∫—Ä—ã–≤–∞–π—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –Ω–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º –¥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.")
                        st.write("–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å—Ç—Ä–æ–∫ –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.")
                        
                        # –ë–ª–æ–∫–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
                        with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞..."):
                            # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ—à–∏–±–∫–∏
                            st.session_state.processing_result = None
                            st.session_state.processing_error = None
                            
                            # –í—ã–ø–æ–ª–Ω—è–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
                            success = process_files()
                            
                            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ session_state –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
                            if success:
                                st.session_state.processing_result = "–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω! –í—ã –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –µ–≥–æ –Ω–∏–∂–µ."
                                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–∫—Ä–æ–ª–ª–∞ –∫ —Å–µ–∫—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
                                st.session_state.scroll_to_download = True
                            else:
                                st.session_state.processing_error_message = st.session_state.processing_error
                        
                        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –æ–±—Ä–∞–±–æ—Ç–∫–∏
                        st.session_state.start_processing = False
                        
                        # –§–æ—Ä—Å–∏—Ä—É–µ–º –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI
                        st.rerun()
                    
            else:
                st.warning("–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel-—Ñ–∞–π–ª–∞.")
                
        else:
                    st.warning("–§–∞–π–ª –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Excel-—Ñ–∞–π–ª–∞.")
                    
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –æ—à–∏–±–æ–∫ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Å–µ–π—á–∞—Å
        if not st.session_state.get('start_processing', False):
            # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            if st.session_state.get('processing_result'):
                st.success(st.session_state.processing_result)
                # –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∏—Ç—å –∫ —Å–µ–∫—Ü–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                if st.session_state.get('scroll_to_download', False):
                    st.markdown('<script>setTimeout(function() { window.scrollTo(0, document.body.scrollHeight); }, 500);</script>', 
                                unsafe_allow_html=True)
                    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ —Å–∫—Ä–æ–ª–ª–∞
                    st.session_state.scroll_to_download = False
    
            # –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏
            if st.session_state.get('processing_error_message'):
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞: {st.session_state.processing_error_message}")
                # –û—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                st.session_state.processing_error_message = None
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è, –µ—Å–ª–∏ —Ñ–∞–π–ª –±—ã–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω
            if st.session_state.output_file_path and os.path.exists(st.session_state.output_file_path):
                # –°–æ–∑–¥–∞–µ–º –∫–æ–ª–æ–Ω–∫—É –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–æ–ø–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ, –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–∏–¥–∞)
                col1, col2, col3 = st.columns([1,2,1])
                with col2:
                    with open(st.session_state.output_file_path, "rb") as file:
                        st.download_button(
                            label="–°–ö–ê–ß–ê–¢–¨ –û–ë–†–ê–ë–û–¢–ê–ù–ù–´–ô –§–ê–ô–õ",
                            data=file,
                            file_name=os.path.basename(st.session_state.output_file_path),
                            mime="application/pdf",
                            use_container_width=True,
                            type="primary",
                            key="download_button"
                        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –æ—Ç—á–µ—Ç –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –æ–±—Ä–∞–±–æ—Ç–∫–∏
        if st.session_state.get('show_processing_report', False):
            # –£–¥–∞–ª—è–µ–º –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞, –ø–æ—Å–∫–æ–ª—å–∫—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –±–æ–ª—å—à–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è
            # –ü—Ä–æ—Å—Ç–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –Ω–µ –ø—ã—Ç–∞—Ç—å—Å—è –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –æ—Ç—á–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ
            st.session_state.show_processing_report = False
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤–º–µ—Å—Ç–æ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        with st.expander("–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π", expanded=False):
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ st.session_state.log_messages
            if 'log_messages' in st.session_state and st.session_state.log_messages:
                st.markdown('<div class="log-container">', unsafe_allow_html=True)
                for log_msg in st.session_state.log_messages:
                    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
                    log_class = "log-info"
                    if "ERROR" in log_msg:
                        log_class = "log-error"
                    elif "WARNING" in log_msg:
                        log_class = "log-warning"
                    elif "SUCCESS" in log_msg:
                        log_class = "log-success"
                        
                    st.markdown(f'<div class="log-entry {log_class}">{log_msg}</div>', unsafe_allow_html=True)
                st.markdown('</div>', unsafe_allow_html=True)
            else:
                st.info("–ñ—É—Ä–Ω–∞–ª –ø—É—Å—Ç")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
def process_files():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–æ–≤.
    –°–æ–∑–¥–∞–µ—Ç PDF-—Ñ–∞–π–ª —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤.
    """
    try:
        log.info("===================== –ù–ê–ß–ê–õ–û –û–ë–†–ê–ë–û–¢–ö–ò –§–ê–ô–õ–ê =====================")
        add_log_message("–ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞", "INFO")
        st.session_state.is_processing = True
        st.session_state.processing_result = None
        st.session_state.processing_error = None
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—É—Ç–µ–π –∫ –ø–∞–ø–∫–∞–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        cm = st.session_state.config_manager
        missing_folders = []
        
        for i in range(1, 4):
            product_path = cm.get_setting(f'paths.product_images_folder_path_{i}', "")
            package_path = cm.get_setting(f'paths.package_images_folder_path_{i}', "")
            
            if product_path and not os.path.exists(product_path):
                missing_folders.append(f"–ü–∞–ø–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ {i}: {product_path}")
            if package_path and not os.path.exists(package_path):
                missing_folders.append(f"–ü–∞–ø–∫–∞ —É–ø–∞–∫–æ–≤–æ–∫ {i}: {package_path}")
        
        if missing_folders:
            error_msg = "–°–ª–µ–¥—É—é—â–∏–µ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:\n" + "\n".join(missing_folders)
            log.error(error_msg)
            add_log_message(error_msg, "ERROR")
            st.session_state.processing_error = error_msg
            return False
        
        with st.spinner("–ò–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ..."):
            cm = st.session_state.config_manager
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —Ç–æ–≤–∞—Ä–æ–≤
            product_image_folders = [
                cm.get_setting('paths.product_images_folder_path_1'),
                cm.get_setting('paths.product_images_folder_path_2'),
                cm.get_setting('paths.product_images_folder_path_3')
            ]
            
            # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ —É–ø–∞–∫–æ–≤–æ–∫
            package_image_folders = [
                cm.get_setting('paths.package_images_folder_path_1'),
                cm.get_setting('paths.package_images_folder_path_2'),
                cm.get_setting('paths.package_images_folder_path_3')
            ]

            df = st.session_state.df
            article_col = st.session_state.get('article_column')
            
            if df is None or article_col is None:
                st.session_state.processing_error = "–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª Excel –∏–ª–∏ –Ω–µ –≤—ã–±—Ä–∞–Ω —Å—Ç–æ–ª–±–µ—Ü —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏."
                return False
                
            temp_dir = ensure_temp_dir()
            
            output_path, inserted_cards, not_found_articles = create_pdf_cards(
                df=df,
                article_col_name=article_col,
                product_image_folders=product_image_folders,
                package_image_folders=package_image_folders,
                output_folder=temp_dir,
                progress_callback=lambda current, total: add_log_message(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {current} –∏–∑ {total} —Å—Ç—Ä–æ–∫", "INFO"),
                max_total_file_size_mb=st.session_state.get('max_file_size_mb', 100)
            )

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
            cm = st.session_state.config_manager
            cm.save_settings()

            st.session_state.output_file_path = output_path
            
            if inserted_cards > 0:
                success_msg = f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫: {inserted_cards}."
                st.session_state.processing_result = success_msg
                log.info(success_msg)
                add_log_message(success_msg, "SUCCESS")
                
                if not_found_articles:
                    st.session_state.not_found_articles = not_found_articles
                    warning_msg = f"–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {len(not_found_articles)} –∞—Ä—Ç–∏–∫—É–ª–æ–≤."
                    add_log_message(warning_msg, "WARNING")
                
                log.info("===================== –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û =====================")
                return True
            else:
                error_msg = f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å PDF. –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Å—Ç–æ–ª–±—Ü–µ."
                if not_found_articles:
                    error_msg += f" (–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ {len(not_found_articles)} –∞—Ä—Ç–∏–∫—É–ª–æ–≤)."
                st.session_state.processing_error = error_msg
                log.warning(error_msg)
                add_log_message(error_msg, "WARNING")
                log.info("===================== –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê (–ö–ê–†–¢–û–ß–ö–ò –ù–ï –°–û–ó–î–ê–ù–´) =====================")
                return False

    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF: {e}"
        st.session_state.processing_error = error_msg
        log.error(error_msg, exc_info=True)
        add_log_message(error_msg, "ERROR")
        log.info("===================== –û–ë–†–ê–ë–û–¢–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –° –û–®–ò–ë–ö–û–ô =====================")
        return False
    finally:
        st.session_state.is_processing = False

def show_results(stats: Dict[str, Any]):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞.
    """
    st.write("**–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:**")
    st.write(f"**–°–æ–∑–¥–∞–Ω–æ –∫–∞—Ä—Ç–æ—á–µ–∫:** {stats['inserted_cards']}")
    st.write(f"**–ù–µ –Ω–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è:** {', '.join(stats['not_found_articles'])}")

def initialize_session_state():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ session state, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    # –°–ª–æ–≤–∞—Ä—å —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    defaults = {
        'df': None,
        'temp_file_path': None,
        'processing_result': None,
        'processing_error': None,
        'is_processing': False,
        'output_file_path': None,
        'selected_sheet': None,
        'available_sheets': [],
        'log_messages': [],
        'article_column': 'A',
        'start_processing': False,
        'show_processing_report': False,
        'processing_error_message': None,
        'scroll_to_download': False,
        'not_found_articles': []
    }
    # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Å–ª–æ–≤–∞—Ä—é –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    for key, value in defaults.items():
        if key not in st.session_state:
            st.session_state[key] = value

def check_required_modules():
    """
    –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥—É–ª–µ–π.
    –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –≤ start.py
    """
    pass

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session_state
    initialize_session_state()

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.title("üìá –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä PDF-–∫–∞—Ä—Ç–æ—á–µ–∫ –∏–∑ Excel")
    st.write("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à Excel-—Ñ–∞–π–ª, –≤—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏, –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Å—Ç PDF-–¥–æ–∫—É–º–µ–Ω—Ç —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏ —Ç–æ–≤–∞—Ä–æ–≤.")

    # –ü–æ–ª—É—á–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    cm = init_config_manager()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
    check_required_modules()

    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º UI
    show_settings()
    file_uploader_section()

if __name__ == "__main__":
    main()
